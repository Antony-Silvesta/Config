name: CI/CD Pipeline with MongoDB

on:
  push:
    branches:
      - main

jobs:
  pipeline:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install Docker and Docker Compose
      - name: Install Docker and Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Step 3: Start MongoDB using Docker Compose
      - name: Start MongoDB
        run: docker-compose up -d

      # Step 4: Wait for MongoDB to be ready
      - name: Wait for MongoDB to be ready
        run: |
          until nc -z localhost 27017; do
            echo "Waiting for MongoDB to start..."
            sleep 2
          done
          echo "MongoDB is ready"

      # Step 5: Get MongoDB Container Name
      - name: Get MongoDB Container Name
        id: get_container
        run: echo "CONTAINER_NAME=$(docker ps --filter 'ancestor=mongo:4.4' --format '{{.Names}}')" >> $GITHUB_ENV

      # Step 6: Show MongoDB Databases and Collections
      - name: Show MongoDB Databases and Collections
        run: |
          echo "Listing databases in MongoDB:"
          docker exec $CONTAINER_NAME mongo --eval "show dbs"

          echo "Switching to 'sampleupload' database and listing collections:"
          docker exec $CONTAINER_NAME mongo --eval "use sampleupload; show collections"


      - name: Run Selenium tests and generate HTML report
        id: run_tests
        run: |
           pytest --html=report.html --self-contained-html > pytest_test_results.log || true
           cat pytest_test_results.log

    