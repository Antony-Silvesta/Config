name: MongoDB Atlas Integration Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  connect-and-query-mongo:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install MongoDB Shell (mongosh)
      run: |
        # Add MongoDB's official GPG key and repository to the package manager
        wget -qO - https://www.mongodb.org/static/pgp/server-6.0.asc | sudo tee /etc/apt/trusted.gpg.d/mongodb.asc
        echo "deb https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/6.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-6.0.list

        # Update package lists and install mongosh
        sudo apt-get update
        sudo apt-get install -y mongodb-mongosh

    - name: Set up MongoDB connection
      run: |
        # Save the MongoDB URI as a GitHub secret or directly here
        MONGO_URI="mongodb+srv://dbUser:P@ssw0rd123@cluster0.jdala.mongodb.net/sampletest?retryWrites=true&w=majority"

    - name: Connect to MongoDB and run query
      run: |
        # Connect to MongoDB and list all collections in the 'sampletest' database
        mongosh $MONGO_URI --eval 'printjson(db.getCollectionNames())'

    - name: Verify connection and query result
      run: |
        # Optionally, you can run another query or check for specific collections
        mongosh $MONGO_URI --eval 'printjson(db.sampletest.find().limit(1).toArray())'


    - name: Set up ChromeDriver and Chrome
      uses: browser-actions/setup-chrome@v1
      with:
          chrome-version: 'latest'
  
    - name: Set Timezone to India Standard Time (IST)
      run: sudo timedatectl set-timezone Asia/Kolkata
  
    - name: Run Selenium tests and generate HTML report
      id: run_tests
      run: |
          pytest --html=report.html --self-contained-html > pytest_test_results.log || exit 0
          cat pytest_test_results.log
  
    - name: Check if tests passed or failed
      run: |
          if grep -q "FAILED" pytest_test_results.log; then
            echo "Tests failed"
            echo "TESTS_PASSED=false" >> $GITHUB_ENV
          else
            echo "Tests passed"
            echo "TESTS_PASSED=true" >> $GITHUB_ENV
          fi
  
    - name: Archive Pytest Results
      uses: actions/upload-artifact@v3
      with:
          name: pytest-results
          path: pytest_test_results.log
  
    - name: Archive HTML Test Report
      uses: actions/upload-artifact@v3
      with:
          name: selenium-test-report
          path: report.html
  
    - name: Archive Pytest Results (with check)
      run: |
          if [ -f "pytest_test_results.log" ]; then
            echo "Pytest results archived"
          else
            echo "Failed to archive Pytest results"
            exit 1
          fi
  
    - name: Archive HTML Test Report (with check)
      run: |
          if [ -f "report.html" ]; then
            echo "HTML test report archived"
          else
            echo "Failed to archive HTML test report"
            exit 1
          fi
  